OpenBench LogicSniffer repository

== MODIFIED VERSION FOR TEENSY ==

This version has some additional capabilities:
1. Loading firmware on the Teensy (or any board via command line in config file)
2. Added commands for buffer sizes >256k
3. Ability to select 1, 2, 4, or 8 channels and adjust buffer size accordingly

For releases for Windows and Linux, go to github.com/LAtimes2/old/releases

== Original notes ==

This is the public GIT repository for the OpenBench LogicSniffer (short name:
ols) written by J.W. Janssen.

For more information about this software, see <http://ols.lxtreme.nl> and
<http://dangerousprototypes.com/open-logic-sniffer>.

== COMPILING THE SOURCES ==

In case you're interested in cloning this repository and compile it yourself,
you should do the following:

  $ git clone http://github.com/jawi/ols.git

For compiling the sources, you need to have at least a valid JDK (1.6+) and
Maven3 installed. For developing, I can recommend Eclipse as development
environment.

  $ cd ols/
  $ mvn clean install

After this, you should find the latest binary ZIP or tarball in
"ols.distribution/target".

== DEVELOPING FOR OLS ==

Developing for OLS can be done with any "modern" IDE, like Eclipse, Netbeans,
or even Emacs. Keep in mind that IDE-specific stuff is not committed to the
repository as this would clutter it unnecessarily.

Keep in mind that if you're going to use an IDE like Eclipse or Netbeans (or
whatever IDE you're preferring) that it should provide support for Maven3,
otherwise it most probably won't compile out of the box. In addition, you
probably want support for Git in your IDE as well. To create the needed project
files for, for example, Eclipse, you can use the following Maven command:

  $ mvn eclipse:eclipse

For other IDEs there are similar commands. See the Maven3 site for more details
on this.

Some notes for Eclipe: after importing the projects into your workspace, you
might need to enable Maven support by hand. Simply select all projects, right
click on them and choose "Enable Dependency Management" from the Maven menu
should be sufficient. For running the OLS client in Eclipse, you can make use
of the launch configurations found in the eclipse/ subdirectory of the OLS
repository. Also the code formatting rules and cleanup rules can be found
there.

Drop me a line if you want to contribute code to the OLS repository, if needed
I can give you write-access to the GitHub or apply your patch.

-- J.W. Janssen, <j dot w dot janssen at lxtreme.nl>

